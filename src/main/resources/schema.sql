DROP TABLE IF EXISTS LIKES, FRIENDS, FILMS_GENRES, GENRES, FILMS, RATINGS, MPA, USERS, REVIEWS,
    REVIEW_SCORES, EVENTTYPES, OPERATIONS, EVENTS, EVENT_LIKE, EVENT_REVIEW, EVENT_FRIEND CASCADE;

CREATE TABLE IF NOT EXISTS "USERS"
(
    "USERID"   INT     NOT NULL AUTO_INCREMENT,
    "NAME"     VARCHAR,
    "LOGIN"    VARCHAR NOT NULL,
    "BIRTHDAY" DATE,
    "EMAIL"    VARCHAR NOT NULL,
    CONSTRAINT "PK_USERS" PRIMARY KEY ("USERID")
);

CREATE TABLE IF NOT EXISTS "FRIENDS"
(
    "USERID"   INT NOT NULL,
    "FRIENDID" INT NOT NULL,
    "STATUS"   BOOLEAN,
    CONSTRAINT "PK_FRIENDS" PRIMARY KEY ("USERID", "FRIENDID")
);

CREATE TABLE IF NOT EXISTS "FILMS"
(
    "FILMID"      INT     NOT NULL AUTO_INCREMENT,
    "NAME"        VARCHAR NOT NULL,
    "DESCRIPTION" VARCHAR(200),
    "DURATION"    INT,
    "RELEASEDATE" DATE,
    "MPAID"       INT     NOT NULL,
    CONSTRAINT "PK_FILMS" PRIMARY KEY ("FILMID")
);
CREATE TABLE IF NOT EXISTS "DIRECTOR"
(
    DIRECTORID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME       VARCHAR,
    CONSTRAINT director_pk PRIMARY KEY (DIRECTORID)
);
CREATE TABLE IF NOT EXISTS "FILMS_DIRECTORS"
(
    FILMID     INT REFERENCES FILMS (FILMID) ON DELETE CASCADE ON UPDATE CASCADE,
    DIRECTORID INT REFERENCES DIRECTOR (DIRECTORID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT films_directors_pk PRIMARY KEY (FILMID, DIRECTORID)
);

CREATE TABLE IF NOT EXISTS "GENRES"
(
    "GENREID" INT     NOT NULL,
    "GENRE"   VARCHAR NOT NULL,
    CONSTRAINT "PK_GENRES" PRIMARY KEY ("GENREID")
);

CREATE TABLE IF NOT EXISTS "MPA"
(
    "MPAID" INT     NOT NULL,
    "MPA"   VARCHAR NOT NULL,
    CONSTRAINT "PK_RATINGS" PRIMARY KEY ("MPAID")
);

CREATE TABLE IF NOT EXISTS "LIKES"
(
    "FILMID"  INT NOT NULL,
    "USERSID" INT NOT NULL
);

CREATE TABLE IF NOT EXISTS "FILMS_GENRES"
(
    "GENREID" INT NOT NULL,
    "FILMID"  INT NOT NULL,
    CONSTRAINT "PK_FILMS_GENRES" PRIMARY KEY ("GENREID", "FILMID")
);

CREATE TABLE "REVIEWS"
(
    "REVIEWID"   INT     NOT NULL AUTO_INCREMENT,
    "FILMID"     INT     NOT NULL,
    "USERID"     INT     NOT NULL,
    "CONTENT"    VARCHAR not null,
    "ISPOSITIVE" BOOLEAN NOT NULL,
    CONSTRAINT "PK_REVIEWS" PRIMARY KEY (
                                         "REVIEWID"
        )
);

CREATE TABLE "REVIEW_SCORES"
(
    "REVIEWID" INT     NOT NULL,
    "USERID"   INT     NOT NULL,
    "ISLIKE"   BOOLEAN NOT NULL,
    CONSTRAINT "PK_REVIEW_SCORES" PRIMARY KEY (
                                               "REVIEWID", "USERID"
        )
);

CREATE TABLE IF NOT EXISTS "EVENTTYPES"
(
    "EVENTTYPEID" INT     NOT NULL AUTO_INCREMENT PRIMARY KEY,
    "EVENTTYPE"   VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS "OPERATIONS"
(
    "OPERATIONID" INT     NOT NULL AUTO_INCREMENT PRIMARY KEY,
    "OPERATION"   VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS "EVENTS"
(
    "EVENTID"     INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    "USERID"      INT REFERENCES USERS (USERID) ON DELETE CASCADE ON UPDATE CASCADE,
    "EVENTTYPEID" INT NOT NULL,
    "OPERATIONID" INT REFERENCES OPERATIONS (OPERATIONID) ON DELETE CASCADE ON UPDATE CASCADE,
    "TIMESTAMP"   TIMESTAMP default CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS "EVENT_LIKE"
(
    "EVENTID" INT REFERENCES EVENTS (EVENTID) ON DELETE CASCADE ON UPDATE CASCADE,
    "FILMID"  INT NOT NULL
);

CREATE TABLE IF NOT EXISTS "EVENT_REVIEW"
(
    "EVENTID"  INT REFERENCES EVENTS (EVENTID) ON DELETE CASCADE ON UPDATE CASCADE,
    "REVIEWID" INT NOT NULL
);

CREATE TABLE IF NOT EXISTS "EVENT_FRIEND"
(
    "EVENTID"  INT REFERENCES EVENTS (EVENTID) ON DELETE CASCADE ON UPDATE CASCADE,
    "FRIENDID" INT NOT NULL
);


ALTER TABLE "FRIENDS"
    ADD CONSTRAINT "FK_FRIENDS_USERID" FOREIGN KEY ("USERID")
        REFERENCES "USERS" ("USERID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "FRIENDS"
    ADD CONSTRAINT "FK_FRIENDS_FRIENDID" FOREIGN KEY ("FRIENDID")
        REFERENCES "USERS" ("USERID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "FILMS"
    ADD CONSTRAINT "FK_FILMS_RATING" FOREIGN KEY ("MPAID")
        REFERENCES "MPA" ("MPAID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "LIKES"
    ADD CONSTRAINT "FK_LIKES_FILMID" FOREIGN KEY ("FILMID")
        REFERENCES "FILMS" ("FILMID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "LIKES"
    ADD CONSTRAINT "FK_LIKES_USERSID" FOREIGN KEY ("USERSID")
        REFERENCES "USERS" ("USERID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "FILMS_GENRES"
    ADD CONSTRAINT "FK_FILMS_GENRES_GENREID" FOREIGN KEY ("GENREID")
        REFERENCES "GENRES" ("GENREID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "FILMS_GENRES"
    ADD CONSTRAINT "FK_FILMS_GENRES_FILMID" FOREIGN KEY ("FILMID")
        REFERENCES "FILMS" ("FILMID") ON DELETE CASCADE ON UPDATE CASCADE;



ALTER TABLE "REVIEWS"
    ADD CONSTRAINT "FK_REVIEWS_FILMID" FOREIGN KEY ("FILMID")
        REFERENCES "FILMS" ("FILMID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "REVIEWS"
    ADD CONSTRAINT "FK_REVIEWS_USERSID" FOREIGN KEY ("USERID")
        REFERENCES "USERS" ("USERID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "REVIEW_SCORES"
    ADD CONSTRAINT "FK_REVIEW_SCORES_REVIEWID" FOREIGN KEY ("REVIEWID")
        REFERENCES "REVIEWS" ("REVIEWID") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "REVIEW_SCORES"
    ADD CONSTRAINT "FK_REVIEW_SCORES_USERID" FOREIGN KEY ("USERID")
        REFERENCES "USERS" ("USERID") ON DELETE CASCADE ON UPDATE CASCADE;
